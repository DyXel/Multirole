name: x86-windows
on: push
env:
  VCPKG_TRIPLET: x86-windows-static
jobs:
  x86-windows:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install pre-requisites
      shell: bash
      run: |
        choco install --allow-empty-checksums pkgconfiglite
        pip install meson ninja
    - name: Install dependencies
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgGitCommitId: 095a29ce59608465032c3747307dd0009b3e089c
        vcpkgTriplet: ${{ env.VCPKG_TRIPLET }}
        vcpkgArguments: boost-asio boost-filesystem boost-date-time boost-interprocess boost-json fmt libgit2 openssl sqlite3
    - name: Fix Boost.Filesystem library location
      shell: bash
      run: |
        VCPKG_LIBRARYDIR=$VCPKG_ROOT/installed/$VCPKG_TRIPLET/lib
        cp $VCPKG_LIBRARYDIR/boost_filesystem-vc142-mt-x32-1_88.lib $VCPKG_LIBRARYDIR/libboost_filesystem-vc142-mt-s.lib
    - name: Set x86 windows build tools as default
      uses: ilammy/msvc-dev-cmd@v1
      with:
          arch: win32
    - name: Meson build
      shell: cmd
      run: |
        set PKG_CONFIG_PATH=%VCPKG_ROOT%\installed\%VCPKG_TRIPLET%\lib\pkgconfig
        set BOOST_ROOT=%VCPKG_ROOT%\installed\%VCPKG_TRIPLET%
        meson setup build -Dbackend=ninja -Dbuildtype=release -Dstrip=true -Db_lto=true -Db_ndebug=true
        meson compile -C build -j2
    - name: Setup directory with artifacts
      shell: bash
      run: |
        export RDIR=Multirole
        mkdir $RDIR
        cp build/hornet.exe $RDIR/
        cp build/multirole.exe $RDIR/
        cp etc/config.json $RDIR/
        sed -i "s/libocgcore\\\\\\\.so/ocgcore\\\\\\\.dll/g" $RDIR/config.json
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Multirole
        path: Multirole/
